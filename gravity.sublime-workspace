{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"findSo",
				"findSolImpl"
			],
			[
				"Gravi",
				"GravityGame"
			],
			[
				"A",
				"AddTimer"
			],
			[
				"timer",
				"timerListeners"
			],
			[
				"Timer",
				"TimerListener"
			],
			[
				"Add",
				"AddTimerListener"
			],
			[
				"Get",
				"GravityGame::AddTimer"
			],
			[
				"Gra",
				"GravityGame"
			],
			[
				"Base",
				"BaseObject"
			],
			[
				"INC",
				"INCLUDES"
			],
			[
				"mainPa",
				"mainPanel"
			],
			[
				"end",
				"endButton"
			],
			[
				"play",
				"playButton"
			],
			[
				"start",
				"startButton"
			],
			[
				"comp",
				"component"
			],
			[
				"turtle",
				"turtleSlider"
			],
			[
				"Cur",
				"CURRENT_TURTLE_STEP_SLIDER_ID"
			],
			[
				"com",
				"componentTree"
			],
			[
				"EXPEC",
				"EXPECT_LT"
			],
			[
				"Fill",
				"FillRect"
			],
			[
				"PLAY_ID",
				"PLAY_BUTTON_ID"
			],
			[
				"Actio",
				"ActionListener"
			],
			[
				"tria",
				"trianglePoint1"
			],
			[
				"CURRENT",
				"CURRENT_TURTLE_STEP_LABEL_ID"
			],
			[
				"Almost",
				"AlmostWhite"
			],
			[
				"Almo",
				"AlmostWhite"
			],
			[
				"playB",
				"playbackPanel"
			],
			[
				"sliv",
				"sliderPercentageValue"
			],
			[
				"del",
				"delayMS"
			],
			[
				"ela",
				"elapsedTimeMS"
			],
			[
				"Acti",
				"ActionListener"
			],
			[
				"turt",
				"turtleGraphicsOutputLabel"
			],
			[
				"TURTL",
				"TURTLE_GRAPHICS_OUTPUT_LABEL_ID"
			],
			[
				"buttongo",
				"buttonGoToEnd"
			],
			[
				"button",
				"buttonPreviousFrame"
			],
			[
				"buttonGo",
				"buttonGoToStart"
			],
			[
				"newMouse",
				"newMouseEvent"
			],
			[
				"playbac",
				"playbackSlider"
			],
			[
				"turlt",
				"turtleStepSlider"
			],
			[
				"Action",
				"ActionPerformed"
			],
			[
				"sliderTra",
				"sliderTrackBackground"
			],
			[
				"sliderPer",
				"sliderPercentageValue"
			],
			[
				"handl",
				"handled"
			],
			[
				"Colours",
				"Colours::White"
			],
			[
				"bla",
				"_black"
			],
			[
				"SetLower",
				"Slider::SetLowerBoundLabel"
			],
			[
				"SetCur",
				"Slider::SetCurValue"
			],
			[
				"this",
				"thisBounds"
			],
			[
				"Hand",
				"HandleMouseChangedSliderValueListener"
			],
			[
				"value",
				"valueListeners"
			],
			[
				"Value",
				"ValueListener"
			],
			[
				"LOG_",
				"LOG_DEBUG"
			],
			[
				"SetThu",
				"Slider::SetThumbLabel"
			],
			[
				"slider",
				"sliderWidth"
			],
			[
				"upp",
				"upperBoundLabel"
			],
			[
				"lowerB",
				"lowerBoundLabel"
			],
			[
				"lowerBoundLa",
				"lowerBoundLabelPoint"
			],
			[
				"slid",
				"sliderY"
			],
			[
				"slide",
				"sliderWidth"
			],
			[
				"sli",
				"sliderHeight"
			],
			[
				"max",
				"maxValue"
			],
			[
				"saved",
				"savedClipRect"
			],
			[
				"Goto",
				"GO_TO_END_BUTTON_ID"
			],
			[
				"N",
				"NEXT_FRAME_BUTTON_ID"
			],
			[
				"labe",
				"label"
			],
			[
				"currn",
				"currentIntersect"
			],
			[
				"compo",
				"componentBounds"
			],
			[
				"back",
				"backgroundColor"
			],
			[
				"foregr",
				"foregroundColor"
			],
			[
				"Rec",
				"RecursiveFasterMultiply"
			],
			[
				"composed",
				"composedFinal1"
			],
			[
				"final3",
				"composedFinal3b"
			],
			[
				"std",
				"std::vector"
			],
			[
				"poly",
				"polynomialOne"
			],
			[
				"childT",
				"childTranslation"
			],
			[
				"child",
				"childTranslation"
			],
			[
				"Handl",
				"HandlePaintEvent"
			],
			[
				"saed",
				"savedGraphicsTransform"
			],
			[
				"curre",
				"currentClipRect"
			],
			[
				"current",
				"currentClipRect"
			],
			[
				"save",
				"savedGraphicsTransform"
			],
			[
				"GetNum",
				"GetNumEventsInQueue"
			],
			[
				"Boun",
				"GetBounds"
			],
			[
				"LOG",
				"LOG_DEBUG"
			],
			[
				"new",
				"newNode"
			],
			[
				"Lin",
				"LinkedList"
			],
			[
				"ret",
				"return"
			],
			[
				"Li",
				"LinkedListNode"
			],
			[
				"Link",
				"LinkedListNode"
			],
			[
				"Ini",
				"InitOpenGL"
			],
			[
				"Init",
				"Initialize"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"Grai",
				"Gravity"
			],
			[
				"view",
				"view_region"
			],
			[
				"GetT",
				"GetStopWatchTime"
			],
			[
				"EXP",
				"EXPECT_TRUE"
			],
			[
				"mouse",
				"mouseEvent"
			],
			[
				"Sto",
				"StopWatch"
			],
			[
				"mil",
				"millisecondsCircleTopPoint"
			],
			[
				"mill",
				"millisecondsPercentagePoint"
			],
			[
				"milli",
				"millisecondsPercentage"
			],
			[
				"timeDisp",
				"timeDisplayWidth"
			],
			[
				"minute",
				"minutesPercentagePoint"
			],
			[
				"press",
				"pressedPlay"
			],
			[
				"rec",
				"rectangle"
			],
			[
				"isBu",
				"isButtonStopPressed"
			],
			[
				"Set",
				"SetForegroundWhite"
			],
			[
				"buttonS",
				"buttonStopMidpointX"
			],
			[
				"is",
				"isButtonPlayPausePressed"
			],
			[
				"isButt",
				"isButtonPlayPausePressed"
			],
			[
				"buttonPl",
				"buttonPlayPause"
			],
			[
				"outputMidp",
				"outputTextMidpointY"
			],
			[
				"output",
				"outputTextMidpointX"
			],
			[
				"Compon",
				"Component::Repaint"
			],
			[
				"paus",
				"pausedTimeMS"
			],
			[
				"seconds",
				"seconds"
			],
			[
				"outpu",
				"outputText"
			],
			[
				"Cont",
				"Continue"
			],
			[
				"paused",
				"pausedTimeMS"
			],
			[
				"MouseE",
				"MouseEvent"
			],
			[
				"buttonSt",
				"buttonStop"
			],
			[
				"buttonPlay",
				"buttonPlayPause"
			],
			[
				"buttonStop",
				"buttonStopMidpointX"
			],
			[
				"but",
				"buttonHeight"
			],
			[
				"butt",
				"buttonWidth"
			],
			[
				"foat",
				"fontname"
			],
			[
				"second",
				"secondsTextPoint"
			],
			[
				"minutes",
				"minutesText"
			]
		]
	},
	"buffers":
	[
		{
			"file": "inc/Views/BaseView.h",
			"settings":
			{
				"buffer_size": 522,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/SDLEvents.cpp",
			"settings":
			{
				"buffer_size": 7830,
				"line_ending": "Unix"
			}
		},
		{
			"file": "makefile",
			"settings":
			{
				"buffer_size": 1388,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inc/Views/RootWindow.h",
			"settings":
			{
				"buffer_size": 510,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Views/RootWindow.cpp",
			"settings":
			{
				"buffer_size": 3290,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Views/BaseView.cpp",
			"settings":
			{
				"buffer_size": 418,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"snippe",
				"Snippet: Lambda - Minimal"
			],
			[
				"using",
				"Snippet: Using statement"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 567.0
	},
	"console":
	{
		"height": 269.0,
		"history":
		[
			"self",
			"self.show_scope_name()",
			"show_scope_name()",
			"show_scope_name",
			"view.run_command('colourline')",
			"view.id()",
			"view.id",
			"self.view.id",
			"view.run_command('colourline')",
			"view.__dir__(),",
			"'\\n'.join(view.__dir__())",
			"\"\\r\".join(view.__dir__())",
			"\"\\n\".join(view.__dir__())",
			"print(\"hel\")",
			"print(\"\")",
			"print view.dir()",
			"view.__dir__(),",
			"print '[%s]' % ', '.join(map(str, view.__dir__()))",
			"for word in view.__dir__(): print(\"a\")",
			"print(word) for word in view.__dir__()",
			"view.__dir__()",
			"view.run_command('colourline')",
			"view.run_command('colourine')",
			"view.run_command('ColourLine')",
			"view.run_command('colourline')",
			"view.run_command('ColourLine')",
			"view.run_command('example')",
			"ls",
			"view.run_command('ColourLine')",
			"view.__dir__()",
			"view",
			"cls",
			"clear",
			"1+1",
			"sublime_plugin",
			"sublime_plugin.__dir__()",
			"view.run_command('ColourLine')",
			"view.__dir__()",
			"view",
			"view.runCommand('ColourLine')",
			"run ColourLine",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/blisse/Projects/gravity/src/main.cpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/unsigned_int.hpp",
		"/home/blisse/Projects/gravity/lib/glm/util/usertype.dat",
		"/home/blisse/Projects/gravity/src/gravity.cpp",
		"/home/blisse/Projects/gravity/inc/SDLEvents.h",
		"/home/blisse/Projects/gravity/src/SDLEvents.cpp",
		"/home/blisse/Projects/gravity/src/Models/Dot.cpp",
		"/home/blisse/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/blisse/Projects/gravity/inc/gravity.h",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/gradient_paint.inl",
		"/home/blisse/Projects/gravity/gravity",
		"/home/blisse/Projects/gravity/inc/Views/BaseView.h",
		"/home/blisse/Projects/gravity/src/Models/BaseObject.cpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/component_wise.hpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/compatibility.hpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/common.hpp",
		"/home/blisse/Projects/gravity/lib/glm/copying.txt",
		"/home/blisse/Projects/gravity/inc/Models/Dot.h",
		"/home/blisse/Projects/gravity/inc/Views/RootWindow.h",
		"/home/blisse/Projects/gravity/lib/glm/readme.txt",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/rotate_vector.hpp",
		"/home/blisse/Projects/gravity/src/Views/RootWindow.cpp",
		"/home/blisse/Projects/gravity/lib/glm/test/gtx/gtx_component_wise.cpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/virtrev/xstream.hpp",
		"/home/blisse/sol.py",
		"/home/blisse/Downloads/SVN/CS349/a2/XApplication.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Slider.cpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/polar_coordinates.hpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/gradient_paint.hpp",
		"/home/blisse/Projects/gravity/lib/glm/doc/pages.doxy",
		"/home/blisse/Projects/gravity/src/Views/BaseView.cpp",
		"/home/blisse/Projects/gravity/makefile",
		"/home/blisse/Projects/gravity/lib/glm/glm/detail/_swizzle.hpp",
		"/home/blisse/Projects/gravity/src/Models/Timers/Timer.cpp",
		"/home/blisse/Projects/gravity/inc/Models/Settings/GravitySettings.h",
		"/home/blisse/Projects/gravity/inc/Models/Timers/Timer.h",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/wrap.hpp",
		"/home/blisse/Projects/gravity/inc/Models/Timers/TimerListener.h",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/rotate_normalized_axis.hpp",
		"/home/blisse/Projects/gravity/lib/glm/test/gtx/gtx_associated_min_max.cpp",
		"/home/blisse/Projects/gravity/lib/glm/test/gtc/gtc_matrix_access.cpp",
		"/home/blisse/Projects/gravity/src/Models/Timers/TimerListener.cpp",
		"/home/blisse/Projects/gravity/README.md",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/orthonormalize.inl",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/orthonormalize.hpp",
		"/home/blisse/Projects/gravity/a.out",
		"/home/blisse/Projects/gravity/lib/glm/doc/api/dir_e3ecd7863bd215c92a17f47e2ae3be43.html",
		"/home/blisse/Projects/gravity/lib/glm/doc/api/a00200.html",
		"/home/blisse/Projects/gravity/lib/glm/doc/api/a00100.html",
		"/home/blisse/Projects/gravity/lib/glm/glm/exponential.hpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/rotate_vector.inl",
		"/home/blisse/Projects/gravity/bin/gravity.deps",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/handed_coordinate_space.inl",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtx/handed_coordinate_space.hpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/detail/hint.hpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/detail/type_int.hpp",
		"/home/blisse/Projects/gravity/src/Timer.cpp",
		"/home/blisse/Projects/gravity/inc/TimerListener.h",
		"/home/blisse/Projects/gravity/src/TimerListener.cpp",
		"/home/blisse/Projects/gravity/inc/Timer.h",
		"/home/blisse/Projects/gravity/lib/glm/glm/integer.hpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/detail/intrinsic_matrix.hpp",
		"/home/blisse/Downloads/SVN/CS349/a2/TimerListener.h",
		"/home/blisse/Downloads/SVN/CS349/a2/TimerListener.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Timer.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/TimerEvent.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/EventQueue.cpp",
		"/home/blisse/Projects/gravity/lib/glm/test/gtx/gtx_gradient_paint.cpp",
		"/home/blisse/Projects/gravity/lib/glm/test/gtx/gtx_fast_exponential.cpp",
		"/home/blisse/Projects/gravity/inc/Models/BaseObject.h",
		"/home/blisse/Projects/gravity/lib/glm/test/gtc/gtc_random.cpp",
		"/home/blisse/Projects/gravity/lib/glm/glm/gtc/matrix_access.hpp",
		"/home/blisse/Downloads/SVN/CS349/a2/a2_main.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Component.h",
		"/home/blisse/Downloads/SVN/CS349/a2/Graphics.h",
		"/home/blisse/Downloads/SVN/CS349/a2/A2UnitTests.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Component.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Button.h",
		"/home/blisse/Downloads/SVN/CS349/a2/A2WidgetIdentifiers.h",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/src/demangle_unittest.cc",
		"/home/blisse/Downloads/SVN/CS349/a2/MainPanel.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Slider.h",
		"/home/blisse/Downloads/SVN/CS349/a2/TurtleGraphics.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/src/config_for_unittests.h",
		"/home/blisse/Downloads/SVN/CS349/a2/A1UnitTests.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Button.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Colours.h",
		"/home/blisse/Downloads/SVN/CS349/a2/Colours.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/gtest/gtest-1.7.0/test/gtest_color_test.py",
		"/home/blisse/Downloads/SVN/CS349/a2/TurtleGraphicsOp.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/TurtleGraphics.h",
		"/home/blisse/Downloads/SVN/CS349/a2/Timer.h",
		"/home/blisse/Downloads/SVN/CS349/a2/EventQueue.h",
		"/home/blisse/Downloads/SVN/CS349/a2/Event.h",
		"/home/blisse/Downloads/SVN/CS349/a2/Makefile",
		"/home/blisse/Downloads/SVN/CS349/a2/Graphics.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/MainPanel.h",
		"/home/blisse/Downloads/SVN/CS349/a2/PlayButton.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Panel.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/PlayButton.h",
		"/home/blisse/Downloads/SVN/CS349/a2/gtest/gtest-1.7.0/test/gtest_environment_test.cc",
		"/home/blisse/Downloads/SVN/CS349/a2/gtest/gtest-1.7.0/test/gtest_env_var_test.py",
		"/home/blisse/Downloads/SVN/CS349/a2/SchemeAffineTransform.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog/include/glog/log_severity.h",
		"/home/blisse/Downloads/SVN/CS349/a2/scheme/tinyscheme/opdefines.h",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/signalhandler_unittest",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/m4/ac_have_sync_val_compare_and_swap.m4",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/m4/ac_have_attribute.m4",
		"/home/blisse/Downloads/SVN/CS349/a2/scheme/tinyscheme/hack.txt",
		"/home/blisse/Downloads/SVN/CS349/a2/gtest/gtest-1.7.0/xcode/Config/ReleaseProject.xcconfig",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/vsprojects/logging_unittest/logging_unittest.vcproj",
		"/home/blisse/Downloads/SVN/CS349/a2/TimerEvent.h",
		"/home/blisse/Downloads/SVN/CS349/a2/demo_main.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/EventQueueUnitTests.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/PaintEvent.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/a2_unittests",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/.libs/utilities_unittest",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/.deps/symbolize_unittest-symbolize_unittest.Po",
		"/home/blisse/Downloads/SVN/CS349/a2/XWindow.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/Rectangle.h",
		"/home/blisse/Downloads/SVN/CS349/a2/Point.h",
		"/home/blisse/Downloads/SVN/CS349/a2/Point.cpp",
		"/home/blisse/Downloads/SVN/CS349/a2/gtest/gtest-1.7.0/test/production.cc",
		"/home/blisse/Downloads/SVN/CS349/a2/gtest/gtest-1.7.0/test/gtest-port_test.cc",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/packages/deb/libgoogle-glog0.install",
		"/home/blisse/Downloads/SVN/CS349/a2/glog/glog-0.3.3/packages/deb/libgoogle-glog0.dirs",
		"/home/blisse/Downloads/SVN/CS349/a2/XWindow.h",
		"/home/blisse/Downloads/SVN/CS349/a2/turtle-demos.scm"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"a.out",
			"void",
			"float",
			";",
			"float",
			",U",
			",",
			"bool",
			"5.0f",
			"this->",
			"5",
			"x",
			"size",
			"0",
			"y",
			"2",
			"findSolutionImpl",
			"findSol",
			"XNextEvent",
			"2",
			"100",
			"1.0",
			"AddTimer2",
			"cout",
			"instance",
			"Instance",
			"GetInstance",
			"S",
			"AddTimer1",
			"timersList",
			".",
			"AddTimerLi",
			"this->",
			"LOOP",
			" new GravityGame",
			"cerr",
			"OnTimerStart",
			"AddTimer",
			"delay",
			"timersList",
			"_TIMER_H__",
			"lastTime",
			"this",
			"GetCurrentTime",
			"timerListeners",
			"//",
			"true",
			" )",
			"( ",
			"//",
			"start",
			"//",
			"_GRAVITY_H__",
			"Gravity::",
			"Gravity",
			"this->",
			"int",
			"_ROOT_WINDOW_H__",
			"_UNIVERSE_VIEW_H__",
			"INCLUDE",
			"0",
			"glColor3f",
			"100",
			"NULL",
			"EXPECT_TRUE",
			"EXPECT_NE",
			"NULL",
			"win",
			"__",
			"*",
			"EXPECT_N",
			"Slider",
			"component",
			"if",
			"define",
			"EXPECT_EQ",
			"TurtleTests",
			"Unit",
			"UserUn",
			"Point",
			"DrawPoly",
			"Red",
			"    g->SetForegroundColor(Colours::Red());\n",
			"0",
			"DrawRect",
			"iconVector",
			"thisBounds",
			"symbolSize / 2",
			"iconVector",
			"triangleVector",
			"isSelected",
			"symbolHeight",
			"bounds.width",
			"Button",
			"turtleStepSliderLabel",
			"playbackOutputLabel",
			"this",
			"turtleGraphicsOutputLabel",
			":Gray",
			"Gray()",
			"Gray",
			"Black",
			"White",
			"Black",
			"_COLOURS_H_",
			"playbackPanel",
			"slider",
			"turtleGraphicsOutputLabel",
			"turtleStepSlider",
			"100",
			"turtle",
			"50",
			"25",
			"turtle",
			"turtleGraphicsOutputLabel",
			"50",
			"25",
			"label",
			");\n",
			"setcur",
			"setcurva",
			"setcurval",
			"sliderPercentageValue",
			"SetCurVal",
			"thumbLabel",
			"float",
			"elapsedTimeMS",
			"delayMS"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "inc/Views/BaseView.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 522,
						"regions":
						{
						},
						"selection":
						[
							[
								280,
								280
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"history_list_is_closing": true,
							"sublime_auto_complete": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/SDLEvents.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7830,
						"regions":
						{
						},
						"selection":
						[
							[
								180,
								180
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 90.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1388,
						"regions":
						{
						},
						"selection":
						[
							[
								430,
								430
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "inc/Views/RootWindow.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 510,
						"regions":
						{
						},
						"selection":
						[
							[
								24,
								24
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "src/Views/RootWindow.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3290,
						"regions":
						{
						},
						"selection":
						[
							[
								2560,
								2560
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"history_list_is_closing": true,
							"sublime_auto_complete": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1170.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/Views/BaseView.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 418,
						"regions":
						{
						},
						"selection":
						[
							[
								336,
								336
							]
						],
						"settings":
						{
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"sublime_auto_complete": true,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 236.0
	},
	"output.find_results":
	{
		"height": 100.0
	},
	"project": "gravity.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"makefil",
				"makefile"
			],
			[
				"gravitycpp",
				"src/gravity.cpp"
			],
			[
				"baseviewcpp",
				"src/Views/BaseView.cpp"
			],
			[
				"baseviewh",
				"inc/Views/BaseView.h"
			],
			[
				"rootwindowh",
				"inc/Views/RootWindow.h"
			],
			[
				"basevie",
				"inc/Views/BaseView.h"
			],
			[
				"dotcpp",
				"src/Models/Dot.cpp"
			],
			[
				"dot",
				"inc/Models/Dot.h"
			],
			[
				"doth",
				"inc/Models/Dot.h"
			],
			[
				"makefile",
				"makefile"
			],
			[
				"base",
				"src/Models/BaseObject.cpp"
			],
			[
				"rootwindowcpp",
				"src/Views/RootWindow.cpp"
			],
			[
				"rootwindcpp",
				"src/Views/RootWindow.cpp"
			],
			[
				"rootcpp",
				"src/Views/RootWindow.cpp"
			],
			[
				"timercpp",
				"src/Models/Timers/Timer.cpp"
			],
			[
				"window",
				"src/Views/RootWindow.cpp"
			],
			[
				"gravicpp",
				"src/gravity.cpp"
			],
			[
				"maincp",
				"src/main.cpp"
			],
			[
				"timerlist",
				"inc/Models/Timers/TimerListener.h"
			],
			[
				"graviyh",
				"inc/gravity.h"
			],
			[
				"timerlisnh",
				"inc/Models/Timers/TimerListener.h"
			],
			[
				"timerlistecpp",
				"src/Models/Timers/TimerListener.cpp"
			],
			[
				"timerliste",
				"inc/Models/Timers/TimerListener.h"
			],
			[
				"timerh",
				"inc/Models/Timers/Timer.h"
			],
			[
				"rootwincpp",
				"src/Views/RootWindow.cpp"
			],
			[
				"main",
				"src/main.cpp"
			],
			[
				"gravityh",
				"inc/gravity.h"
			],
			[
				"gravity",
				"src/gravity.cpp"
			],
			[
				"rootwindh",
				"inc/Views/RootWindow.h"
			],
			[
				"rootwincp",
				"src/Views/RootWindow.cpp"
			],
			[
				"gravitycp",
				"src/gravity.cpp"
			],
			[
				"make",
				"makefile"
			],
			[
				"grav",
				"inc/gravity.h"
			],
			[
				"timerlistenh",
				"inc/TimerListener.h"
			],
			[
				"timerlistencpp",
				"src/TimerListener.cpp"
			],
			[
				"makefl",
				"makefile"
			],
			[
				"baseobjecth",
				"inc/Models/BaseObject.h"
			],
			[
				"baseob",
				"src/Models/BaseObject.cpp"
			],
			[
				"baseobecpp",
				"src/Models/BaseObject.cpp"
			],
			[
				"rootwnh",
				"inc/Views/RootWindow.h"
			],
			[
				"rootwndocpp",
				"src/Views/RootWindow.cpp"
			],
			[
				"root",
				"inc/Views/RootWindow.h"
			],
			[
				"rootwindow",
				"inc/Views/RootWindow.h"
			],
			[
				"makefi",
				"makefile"
			],
			[
				"rootwinh",
				"inc/Views/RootWindow.h"
			],
			[
				"roowindoh",
				"inc/Views/RootWindow.h"
			],
			[
				"makef",
				"makefile"
			],
			[
				"componeh",
				"Component.h"
			],
			[
				"a2",
				"A2WidgetIdentifiers.h"
			],
			[
				"a2ma",
				"a2_main.cpp"
			],
			[
				"a2main",
				"a2_main.cpp"
			],
			[
				"slidercpp",
				"Slider.cpp"
			],
			[
				"componenth",
				"Component.h"
			],
			[
				"graphich",
				"Graphics.h"
			],
			[
				"buttoncpp",
				"Button.cpp"
			],
			[
				"buttonh",
				"Button.h"
			],
			[
				"coloursh",
				"Colours.h"
			],
			[
				"unit",
				"A2UnitTests.cpp"
			],
			[
				"turtlegraphop",
				"TurtleGraphicsOp.cpp"
			],
			[
				"turlt",
				"TurtleGraphics.cpp"
			],
			[
				"eventqueue",
				"EventQueue.cpp"
			],
			[
				"turtlegra",
				"TurtleGraphics.cpp"
			],
			[
				"graphiccpp",
				"Graphics.cpp"
			],
			[
				"mainpanecpp",
				"MainPanel.cpp"
			],
			[
				"playbu",
				"PlayButton.cpp"
			],
			[
				"playbut",
				"PlayButton.cpp"
			],
			[
				"mainpa",
				"MainPanel.cpp"
			],
			[
				"graphic",
				"TurtleGraphics.cpp"
			],
			[
				"mainpanelh",
				"MainPanel.h"
			],
			[
				"a2iden",
				"A2WidgetIdentifiers.h"
			],
			[
				"colour",
				"Colours.cpp"
			],
			[
				"colourscpp",
				"Colours.cpp"
			],
			[
				"coloh",
				"Colours.h"
			],
			[
				"turtlegh",
				"TurtleGraphics.h"
			],
			[
				"slider",
				"Slider.cpp"
			],
			[
				"timer",
				"Timer.h"
			],
			[
				"eventque",
				"EventQueue.h"
			],
			[
				"mainp",
				"MainPanel.h"
			],
			[
				"timereven",
				"TimerEvent.cpp"
			],
			[
				"mainpaneh",
				"MainPanel.h"
			],
			[
				"timerlish",
				"TimerListener.h"
			],
			[
				"timerlis",
				"TimerListener.cpp"
			],
			[
				"xapp",
				"XApplication.cpp"
			],
			[
				"componecpp",
				"Component.cpp"
			],
			[
				"slidecpp",
				"Slider.cpp"
			],
			[
				"buttcp",
				"Button.cpp"
			],
			[
				"unittes",
				"A2UnitTests.cpp"
			],
			[
				"turtle",
				"TurtleGraphics.h"
			],
			[
				"mainph",
				"MainPanel.h"
			],
			[
				"componcpp",
				"Component.cpp"
			],
			[
				"xwindp",
				"XWindow.cpp"
			],
			[
				"turlth",
				"TurtleGraphics.h"
			],
			[
				"turltgracpp",
				"TurtleGraphics.cpp"
			],
			[
				"pointcpp",
				"Point.cpp"
			],
			[
				"pointh",
				"Point.h"
			],
			[
				"reh",
				"Rectangle.h"
			],
			[
				"compoh",
				"Component.h"
			],
			[
				"xwindo",
				"XWindow.cpp"
			],
			[
				"",
				"Slider.cpp"
			],
			[
				"turtlh",
				"TurtleGraphics.h"
			],
			[
				"compoc",
				"Component.cpp"
			],
			[
				"xwind",
				"XWindow.cpp"
			],
			[
				"turtlegraph",
				"TurtleGraphics.cpp"
			],
			[
				"value",
				"ValueListener.h"
			],
			[
				"actionli",
				"ActionListener.h"
			],
			[
				"mainh",
				"MainPanel.h"
			],
			[
				"actionh",
				"ActionListener.h"
			],
			[
				"mainpah",
				"MainPanel.h"
			],
			[
				"sliderh",
				"Slider.h"
			],
			[
				"mainpnh",
				"MainPanel.h"
			],
			[
				"comp",
				"Component.cpp"
			],
			[
				"xwin",
				"XWindow.cpp"
			],
			[
				"xwindocpp",
				"XWindow.cpp"
			],
			[
				"compo",
				"Component.cpp"
			],
			[
				"slideh",
				"Slider.h"
			],
			[
				"mouseeveh",
				"MouseEvent.h"
			],
			[
				"componeteve",
				"ComponentEvent.cpp"
			],
			[
				"painteveh",
				"PaintEvent.h"
			],
			[
				"eventh",
				"Event.h"
			],
			[
				"xwindowh",
				"XWindow.h"
			],
			[
				"cocp",
				"Colours.cpp"
			],
			[
				"colouh",
				"Colours.h"
			],
			[
				"log",
				"Logging.h"
			],
			[
				"valueh",
				"ValueListener.h"
			],
			[
				"butth",
				"Button.h"
			],
			[
				"colourcp",
				"Colours.cpp"
			],
			[
				"rectnh",
				"Rectangle.h"
			],
			[
				"mousevenh",
				"MouseEvent.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 222.0,
		"selected_items":
		[
			[
				"eventQu",
				"EventQueue"
			],
			[
				"XAp",
				"XApplication"
			],
			[
				"EventQue",
				"EventQueue"
			],
			[
				"GetNum",
				"GetNumTimers"
			],
			[
				"TimerListener",
				"TimerListener"
			],
			[
				"",
				"$(GTEST_A):"
			],
			[
				"XAppli",
				"XApplication"
			]
		],
		"width": 392.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 163.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
